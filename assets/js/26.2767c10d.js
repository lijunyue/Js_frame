(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{177:function(t,e,a){"use strict";a.r(e);var s=a(0),l=Object(s.a)({},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000008848061",target:"_blank",rel:"noopener noreferrer"}},[t._v("javascript正则表达式总结 -- Segmentfaul"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.w3school.com.cn/jsref/jsref_obj_regexp.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript RegExp 对象 -- W3school"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.lovebxm.com/2017/05/31/RegExp/#%E5%B8%B8%E8%A7%81%E7%9A%84-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E6%A0%A1%E9%AA%8C",target:"_blank",rel:"noopener noreferrer"}},[t._v("最全正则表达式总结：验证QQ号、手机号、Email、中文、邮编、身份证、IP地址等"),a("OutboundLink")],1)])]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),a("ul",[t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),a("li",[t._m(15),t._v(" "),a("table",[t._m(16),t._v(" "),a("tbody",[t._m(17),t._v(" "),t._m(18),t._v(" "),a("tr",[a("td",[t._v("{n}")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配 n 次， n 为正整数")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v(t._s(t.m,t.n))]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("至少匹配 m 次,之多匹配 n 次，m,n 为正整数")])])])])]),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22)]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"javascript正则表达式整理汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#javascript正则表达式整理汇总","aria-hidden":"true"}},[this._v("#")]),this._v(" JavaScript正则表达式整理汇总")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("正则表达式的日常使用整理 -- by Qzx "),e("br"),this._v("\n参考网址：")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"正则表达式简介及方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式简介及方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 正则表达式简介及方法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("正则表达式通过由普通字符和特殊字符组成的文字模板完成对字符串的校验，检索，替换。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"正则表达式的生成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式的生成","aria-hidden":"true"}},[this._v("#")]),this._v(" 正则表达式的生成")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ol",[a("li",[a("p",[t._v("调用RegExp对象的构造函数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" var reg = new RegExp('^[a-z]+[0-9]$', 'gi');\n")])])]),a("p",[t._v("第一个参数是匹配模式，第二个参数是可选参数(g,i,m)，分别用于指定全局匹配、区分大小写的匹配和多行匹配。这种方式会在正则表达式运行时编译，多用于传参或者从另一来源获取。")])]),t._v(" "),a("li",[a("p",[t._v("使用正则表达式字面值，将匹配模式封闭在两个斜杠中")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" var reg = /^[a-z]+[0-9]$/gi;\n")])])]),a("p",[t._v("当表达式被赋值时，字面量形式提供正则表达式的编译，当正则表达式保持为常量时一般使用字面量方式。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"正则表达式的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 正则表达式的方法")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("test: 检索字符串中的指定子串，返回布尔值")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" /^\\d[a-zA-Z]{3}$/.test('1aac')   // true\n")])])])]),this._v(" "),e("li",[e("p",[this._v("exec: 返回一个数组，数组中的第一条目是第一个匹配值")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" /^\\d[a-zA-Z]{3}$/.test('1aac')   // ['1aac']\n")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"字符串-string-可以使用正则表达式的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串-string-可以使用正则表达式的方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 字符串(string)可以使用正则表达式的方法")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[a("p",[t._v("search: 返回子串的开始位置,匹配没有则返回 -1")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" 'a12b2334c34'.search(/\\d{4}/)    // 4 \n 'a12b23a34c34'.search(/\\d{4}/)   // -1 \n")])])])]),t._v(" "),a("li",[a("p",[t._v("match: 返回匹配到的子串，匹配没有则返回 null")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" 'a12b2334c34'.match(/\\d{4}/)     // [\"2334\"]\n 'a12b2334c3412'.match(/\\d{4}/g)  // [\"2334\", \"3412\"]\n 'a12b23a34c34'.match(/\\d{4}/)    // null\n")])])])]),t._v(" "),a("li",[a("p",[t._v("replace: 替换匹配到的子串")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" 'a12b2334c34'.replace(/\\d{4}/, 'cccc') // \"a12bccccc34\"\n 'a12b2334a3412'.replace(/\\d{4}/g, 'cccc') // \"a12bccccacccc\"\n")])])])]),t._v(" "),a("li",[a("p",[t._v("split: 将字符串分割成数组")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' \'a12b2334c34\'.split(/\\d{4}/)  // ["a12b", "c34"]\n \'a12 b2334 c34\'.split(/ /)    // ["a12", "b2334", "c34"]\n')])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"正则表达式的组成部分"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式的组成部分","aria-hidden":"true"}},[this._v("#")]),this._v(" 正则表达式的组成部分")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("正则表达式的文字模板是有很多不同类型的字符组成的，包括：修饰符，元字符，转义字符，限定符，或结构，括号分组 "),e("br")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("li",[a("p",[a("b",[t._v("修饰符")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("g")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("执行全局匹配（查找所有匹配而非在找到第一个匹配后停止）")])]),t._v(" "),a("tr",[a("td",[t._v("i")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("执行对大小写不敏感的匹配")])]),t._v(" "),a("tr",[a("td",[t._v("m")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("执行多行匹配")])])])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("li",[a("p",[a("b",[t._v("元字符")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("字符")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v(".")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配除了换行符(n)以外的所有字符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}}),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",[t._v("\\w")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配字母，数字，或者汉字")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\W")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配除了字母，数字，汉字以外的其他字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\d")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配数字")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\D")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配除了数字以外的其他字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\s")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任意的空白符（f,n,r,t,v）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\S")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配空白符以外的任意字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\b")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配单词的开始或者结束")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\B")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配单词的非开始或者结束")])]),t._v(" "),a("tr",[a("td",[t._v("\\n")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找换行符")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("\\r")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("查找回车符")])]),t._v(" "),a("tr",[a("td",[t._v("^")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配行首")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("$")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("匹配行尾")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("b",[this._v("转义字符")])]),this._v(" "),e("p",[this._v("? * + | { [ ( ) ] } ^ $ . # 和 空白 以及 部分元字符 这些字符都是需要转义的。例如：需匹配 { 。")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("\\{  \\d   \\[\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("b",[this._v("限定符 -- 量词")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("thead",[e("tr",[e("th",[this._v("字符")]),this._v(" "),e("th",{staticStyle:{"text-align":"left"}},[this._v("含义")]),this._v(" "),e("th",{staticStyle:{"text-align":"left"}},[this._v("字符")]),this._v(" "),e("th",{staticStyle:{"text-align":"left"}},[this._v("含义")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("*")]),this._v(" "),e("td",{staticStyle:{"text-align":"left"}},[this._v("匹配零次至多次")]),this._v(" "),e("td",{staticStyle:{"text-align":"left"}},[this._v("+")]),this._v(" "),e("td",{staticStyle:{"text-align":"left"}},[this._v("匹配一次至多次")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("tr",[e("td",[this._v("?")]),this._v(" "),e("td",{staticStyle:{"text-align":"left"}},[this._v("匹配零次或一次")]),this._v(" "),e("td",{staticStyle:{"text-align":"left"}},[this._v("{n,}")]),this._v(" "),e("td",{staticStyle:{"text-align":"left"}},[this._v("至少匹配 n 次，n 为正整数")])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("li",[a("p",[a("b",[t._v("字符组[] 和 结构 | ")])]),t._v(" "),a("p",[t._v("中括号字符组用来匹配括号内的字符之一")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' \'fasfagxfasdfyfasfz\'.split(/[xyz]/) //["fasfag", "fasdf", "fasf", ""]\n /c|d/.test(\'af\') // false\n /c|d/.test(\'ad\') // true\n')])])]),a("p",[t._v("还有一种排除性字符组")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' \'xaxbycz\'.split(/[^xyz]/) //["x", "x", "y", "z"]\n')])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("b",[this._v("括号分组")]),this._v("：(cd){1,} 可以匹配 cdcd.. 等，其中 cd 便是一个分组。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("b",[this._v("贪婪模式 和 非贪婪模式 ")]),e("br"),this._v("\n默认情况下，所有的限定词都是贪婪模式，表示尽可能多的去捕获字符，而在限定符后增加“？”，则是非贪婪模式，表示尽可能少的去捕获字符。")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" 'ccccccd'.match(/c+/) //[\"ccccc\"]， 贪婪模式, 捕获所有\n 'ccccccd'.match(/c+？/) //[\"c\"]， 非贪婪模式, 只捕获到第一个\n")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("b",[this._v(" 捕获分组 $1~$9属性")]),this._v(" "),e("br"),this._v(" "),e("code",[this._v("RegExp.$1...$9")]),this._v(" 属性值为 String类型，用于返回正则表达式模式中某个子表达式匹配的文本，正则表达式中每个小括号内的部分表达式就是一个子表达式。")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(' var str = \'X98Y87Z65\';\n var reg = /^X(\\d+)Y(\\d+)Z(\\d+)$/;  // 三个数字部分加了小括号，表示子表达式\n reg.test(str);  // 此处使用exec()等其他正则表达式的匹配方法也可以\n console.log(RegExp.$1);  // 98\n console.log(RegExp.$2);  // 87\n console.log(RegExp.$3);  // 65\n \n str = \'<a href="http://www.365mini.com/" title="首页" target="_blank">CodePlayer</a>\';\n reg = /<a\\s[^>]*href="([^">]+)"[^>]*>/;   // 提取URL\n reg.exec(str);\n console.log(RegExp.$1);  // http://www.365mini.com/\n \n var str = \'123-mm\';\n var strReg = str.replace(/(\\d+)-([A-Za-z]+)/g,\'$2\');\n console.log(strReg)  //mm  上面那段$2这个就是表示正则第二组个匹配到的内容\n')])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"日常使用正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日常使用正则表达式","aria-hidden":"true"}},[this._v("#")]),this._v(" 日常使用正则表达式")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ul",[a("li",[a("p",[t._v("获取 background-image 背景图里面的 url 地址：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$('.img').css('background-image').replace(/url\\(([^\\)]+)\\).*/,'$1');\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Email 地址：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" var reg = /^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n")])])])]),t._v(" "),a("li",[a("p",[t._v("URL验证：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var reg = /[a-zA-z]+://[^\\s]* 或 ^http://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$/\n")])])])]),t._v(" "),a("li",[a("p",[t._v("中文验证：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var reg = /[\\u4e00-\\u9fa5]/gm;\n")])])])]),t._v(" "),a("li",[a("p",[t._v("严格的手机号验证")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("var reg = /^https?:\\/\\/(([a-zA-Z0-9_-])+(\\.)?)*(:\\d+)?(\\/((\\.)?(\\?)?=?&?[a-zA-Z0-9_-](\\?)?)*)*$/i;\n")])])])]),t._v(" "),a("li",[a("p",[t._v("去掉前后空格")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" // 去掉前后空格\ntrim: function(str) {\n    var reg = /^\\s+|\\s+$/g;\n    return str.replace(reg, '');\n},\n")])])])]),t._v(" "),a("li",[a("p",[t._v("身份证号部分：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" var reg = /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/;\n")])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"检验字符的表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检验字符的表达式","aria-hidden":"true"}},[this._v("#")]),this._v(" 检验字符的表达式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("1. 汉字：^[\\u4e00-\\u9fa5]{0,}$\n2. 英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$\n3. 长度为3-20的所有字符：^.{3,20}$\n4. 由26个英文字母组成的字符串：^[A-Za-z]+$\n5. 由26个大写英文字母组成的字符串：^[A-Z]+$\n6. 由26个小写英文字母组成的字符串：^[a-z]+$\n7. 由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$\n8. 由数字、26个英文字母或者下划线组成的字符串：^\\w+$ 或 ^\\w{3,20}$\n9. 中文、英文、数字包括下划线：^[\\u4E00-\\u9FA5A-Za-z0-9_]+$\n10. 可以输入含有^%&',;=?$\\\"等字符：[^%&',;=?$\\x22]+\n11. 禁止输入含有~的字符：[^~\\x22]+\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"特殊需求表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#特殊需求表达式","aria-hidden":"true"}},[this._v("#")]),this._v(" 特殊需求表达式")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ol",[a("li",[t._v("Email地址：^\\w+([-+.]\\w+)"),a("em",[t._v("@\\w+([-.]\\w+)")]),t._v(".\\w+([-.]\\w+)"),a("em",[t._v("$\n域名：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?\nInternetURL：[a-zA-z]+://[^\\s]")]),t._v(" 或 ^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%&=]*)?$")]),t._v(" "),a("li",[t._v("手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\\d{8}$")]),t._v(" "),a("li",[t._v('电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^((\\d{3,4}-)|\\d{3.4}-)?\\d{7,8}$')]),t._v(" "),a("li",[t._v("国内电话号码(0511-4405222、021-87888822)：\\d{3}-\\d{8}|\\d{4}-\\d{7}")]),t._v(" "),a("li",[t._v("身份证号(15位、18位数字)：^\\d{15}|\\d{18}$")]),t._v(" "),a("li",[t._v("短身份证号码(数字、字母x结尾)：^([0-9]){7,18}(x|X)?$ 或 ^\\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$")]),t._v(" "),a("li",[t._v("帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$")]),t._v(" "),a("li",[t._v("密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\\w{5,17}$\n强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=."),a("em",[t._v("\\d)(?=.")]),t._v("[a-z])(?=.*[A-Z]).{8,10}$")]),t._v(" "),a("li",[t._v("日期格式：^\\d{4}-\\d{1,2}-\\d{1,2}")]),t._v(" "),a("li",[t._v("一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$")]),t._v(" "),a("li",[t._v("一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$\nxml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$")]),t._v(" "),a("li",[t._v("中文字符的正则表达式：[\\u4e00-\\u9fa5]")]),t._v(" "),a("li",[t._v("双字节字符：[^\\x00-\\xff]    (包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))")]),t._v(" "),a("li",[t._v("空白行的正则表达式：\\n\\s*\\r    (可以用来删除空白行)")]),t._v(" "),a("li",[t._v("HTML标记的正则表达式：<(\\S*?)[^>]"),a("em",[t._v(">.")]),t._v("?</\\1>|<.*? />    (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)")]),t._v(" "),a("li",[t._v("首尾空白字符的正则表达式：^\\s*|\\s*$或(^\\s*)|(\\s*$)    (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)")]),t._v(" "),a("li",[t._v("腾讯QQ号：[1-9][0-9]{4,}    (腾讯QQ号从10000开始)")]),t._v(" "),a("li",[t._v("中国邮政编码：[1-9]\\d{5}(?!\\d)    (中国邮政编码为6位数字)")]),t._v(" "),a("li",[t._v("IP地址：\\d+.\\d+.\\d+.\\d+    (提取IP地址时有用)")]),t._v(" "),a("li",[t._v("IP地址：((?😦?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d))")])])}],!1,null,null,null);l.options.__file="常用正则表达式整理汇总.md";e.default=l.exports}}]);