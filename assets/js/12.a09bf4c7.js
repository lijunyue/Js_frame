(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{200:function(e,a,v){"use strict";v.r(a);var t=v(0),_=Object(t.a)({},function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("div",{staticClass:"content"},[e._m(0),e._v(" "),v("p",[e._v("记录学习JavaScript学习过程中的知识点 -- by Qzx")]),e._v(" "),e._m(1),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/001434499190108eec0bdf14e704a09935cd112e501e31a000",target:"_blank",rel:"noopener noreferrer"}},[e._v("JavaScript教程 -- 廖雪峰"),v("OutboundLink")],1)])]),e._v(" "),e._m(2),e._v(" "),e._m(3)])},[function(){var e=this.$createElement,a=this._self._c||e;return a("h1",{attrs:{id:"javascript学习知识积累"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript学习知识积累","aria-hidden":"true"}},[this._v("#")]),this._v(" JavaScript学习知识积累")])},function(){var e=this.$createElement,a=this._self._c||e;return a("h2",{attrs:{id:"参考网址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考网址","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考网址")])},function(){var e=this.$createElement,a=this._self._c||e;return a("h2",{attrs:{id:"基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础语法","aria-hidden":"true"}},[this._v("#")]),this._v(" 基础语法")])},function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("ul",[v("li",[v("p",[e._v("Number类型：")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("NaN  // 表示Not a Number, 当无法计算结果时用 NaN表示\nInfinity  // 表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，显示\n")])])]),v("p",[e._v("唯一能判断"),v("code",[e._v("NaN")]),e._v("的方法是通过"),v("code",[e._v("isNaN()")]),e._v("函数：")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("isNaN(NaN);  // true\n")])])]),v("p",[e._v("浮点数的比较问题，浮点数的运算过程中会产生误差，要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("Math.abs(1/3 - (1-2/3) < 0.0000001;  // true\n")])])])]),e._v(" "),v("li",[v("p",[e._v("字符串")]),e._v(" "),v("ul",[v("li",[e._v("转义字符的使用\nJavaScript的字符串就是用"),v("code",[e._v("''")]),e._v(" "),v("code",[e._v('""')]),e._v("括起来的字符表示。如果"),v("code",[e._v("'")]),e._v("本身也是一个字符，则用"),v("code",[e._v('""')]),e._v("括起来，若既包含"),v("code",[e._v("'")]),e._v("又包含"),v("code",[e._v('"')]),e._v("，则用转义字符''来标识。")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("\"I'm OK\";   // 包含字符`I`, `'`, `m`,``, 空格 ,`O`,`K`这6个字符\n'I\\'m \\\"OK\\\"!';   // 既包含 ' 又包含 \"\n")])])]),v("ul",[v("li",[e._v("把一个字符串全部变为大写："),v("code",[e._v("toUpperCase()")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var s = 'Hello';\ns.toUpperCase();  // 返回'HELLO'\n")])])]),v("ul",[v("li",[e._v("把一个字符串全部变小写： "),v("code",[e._v("toLowerCase")])]),e._v(" "),v("li",[e._v("搜索指定字符串出现的位置："),v("code",[e._v("indexOf()")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var s = 'Hello, world';\ns.indexOf('world');  // 返回7\ns.indexOf('World');  // 没有找到指定的子串，返回 -1\n")])])]),v("ul",[v("li",[e._v("返回指定索引区间的子串： "),v("code",[e._v("substring()")])])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var s = 'hello, world';\ns.substring(0, 5); // 从索引0开始到5(不包括5)，返回 'hello'\ns.substring(7);    // 从索引7开始到结束，返回'world'\n")])])])]),e._v(" "),v("li",[v("p",[e._v("数组")]),e._v(" "),v("ul",[v("li",[e._v("数组的length: 直接给"),v("code",[e._v("Array")]),e._v("的"),v("code",[e._v("length")]),e._v("赋一个新的值会导致"),v("code",[e._v("Array")]),e._v("大小的变化")]),e._v(" "),v("li",[v("code",[e._v("indexOf()")]),e._v("：搜索一个指定的元素的位置")]),e._v(" "),v("li",[v("code",[e._v("slice()")]),e._v(" : 截取"),v("code",[e._v("Array")]),e._v("的部分元素，然后返回一个新的"),v("code",[e._v("Array")])]),e._v(" "),v("li",[v("code",[e._v("push() 和 pop()")]),e._v(": "),v("code",[e._v("push")]),e._v("是向数组的末尾添加若干元素，"),v("code",[e._v("pop")]),e._v("则把数组的最后一个元素删除掉，返回被删掉的元素。")]),e._v(" "),v("li",[v("code",[e._v("unshift() 和 shift()")]),e._v(": "),v("code",[e._v("unshift")]),e._v("是向头部添加若干元素，"),v("code",[e._v("shift")]),e._v("则把第一个元素删掉。")]),e._v(" "),v("li",[v("code",[e._v("sort()")]),e._v(": 对当前的"),v("code",[e._v("Array")]),e._v("进行排序，会直接修改当前"),v("code",[e._v("Array")]),e._v("的元素位置")]),e._v(" "),v("li",[v("code",[e._v("reverse()")]),e._v(": 把整个数组的元素反转")]),e._v(" "),v("li",[v("code",[e._v("splice()")]),e._v(": 分割数组，从指定的索引开始删除若干元素，再从该位置添加若干元素")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var arr = ['Microsoft', 'Apple', 'Yahoo', 'AOL', 'Excite', 'Oracle'];\n// 从索引2开始删除3个元素,然后再添加两个元素:\narr.splice(2, 3, 'Google', 'Facebook'); // 返回删除的元素 ['Yahoo', 'AOL', 'Excite']\narr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']\n// 只删除,不添加:\narr.splice(2, 2); // ['Google', 'Facebook']\narr; // ['Microsoft', 'Apple', 'Oracle']\n// 只添加,不删除:\narr.splice(2, 0, 'Google', 'Facebook'); // 返回[],因为没有删除任何元素\narr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']\n")])])]),v("ul",[v("li",[v("code",[e._v("concat()")]),e._v(": 把当前的"),v("code",[e._v("Array")]),e._v("和另一个"),v("code",[e._v("Array")]),e._v("连接起来，并返回一个新的"),v("code",[e._v("Array")]),e._v(",当前数组没有发生改变")]),e._v(" "),v("li",[v("code",[e._v("join()")]),e._v(": 把当前数组的每个元素都用指定的字符串连接起来，返回连接后的字符串")]),e._v(" "),v("li",[e._v("多维数组")])])]),e._v(" "),v("li",[v("p",[e._v("对象")]),e._v(" "),v("ul",[v("li",[e._v("对象时一种无序的集合数据类型，由若干键值对组成 ，若属性名包含特殊字符时，必须用"),v("code",[e._v("''")]),e._v("括起来。")]),e._v(" "),v("li",[e._v("对象属性的添加和删除")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var xiaoming = {\n    name: '小明'\n};\nxiaoming.age = 18; // 新增一个age属性\ndelete xiaoming.age; // 删除age属性\n")])])]),v("ul",[v("li",[e._v("检测对象是否拥有某一属性，可以用 "),v("code",[e._v("in")]),e._v(" 操作符: 'name' in xiaoming; // true\n注意："),v("code",[e._v("in")]),e._v("判断一个属性的存在，这个属性不一定是自己的，有可能是继承的")]),e._v(" "),v("li",[e._v("判断一个属性是否是自身拥有的，而不是继承得到的，可以使用"),v("code",[e._v("hasOwnProperty()")]),e._v("方法")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("var xiaoming = {\n    name: '小明'\n};\nxiaoming.hasOwnProperty('name'); // true\nxiaoming.hasOwnProperty('toString'); // false\n")])])]),v("ul",[v("li",[e._v("JavaScript把"),v("code",[e._v("null")]),e._v(","),v("code",[e._v("undefined")]),e._v(","),v("code",[e._v("0")]),e._v(","),v("code",[e._v("NaN")]),e._v("和空字符"),v("code",[e._v("''")]),e._v("视为"),v("code",[e._v("false")]),e._v("，其他的一概视为"),v("code",[e._v("true")]),e._v(";")])])]),e._v(" "),v("li",[v("p",[e._v("Map和Set: Es6规范引入新的数据类型"),v("code",[e._v("Map")]),e._v("，"),v("code",[e._v("Set")])])]),e._v(" "),v("li",[v("p",[e._v('Map结构提供了"值-值"的对应，是一种更完善的Hash结构实现')]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("const m = new Map();\nconst o = {p: 'Hello World'};\n\nm.set(o, 'content')\nm.get(o)  // \"content\"\n\nm.has(o) // true\nm.delete(o) // true\nm.has(o) // false\n\nconst map = new Map([\n  ['name', '张三'],\n  ['title', 'Author']\n]);\n\nmap.size // 2\nmap.has('name') // true\nmap.get('name') // \"张三\"\nmap.has('title') // true\nmap.get('title') // \"Author\"\n")])])]),v("ul",[v("li",[v("p",[e._v("Map实例的属性和操作方法："),v("code",[e._v("size")]),e._v(","),v("code",[e._v("set(key, value)")]),e._v(","),v("code",[e._v("get(key)")]),e._v(","),v("code",[e._v("has(key)")]),e._v(","),v("code",[e._v("delete(key)")]),e._v(","),v("code",[e._v("clear()")])])]),e._v(" "),v("li",[v("p",[e._v("Set结构类似数组，但成员的值是唯一的，没有重复")]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("const s = new Set();\n[2, 3, 5, 4, 5, 2, 2].forEach(x => s.add(x));\n\nfor (let i of s) {\n  console.log(i);  // 2 3 5 4\n}\n\n// 数组去重的方法\n[...new Set(array)]\n")])])])]),e._v(" "),v("li",[v("p",[e._v("Set实例的属性和方法："),v("code",[e._v("size")]),e._v(", "),v("code",[e._v("add(value)")]),e._v(", "),v("code",[e._v("delete(value)")]),e._v(", "),v("code",[e._v("has(value)")]),e._v(", "),v("code",[e._v("clear()")])])])])]),e._v(" "),v("li",[v("p",[e._v("函数：一种代码抽象的方式")]),e._v(" "),v("ul",[v("li",[e._v("arguments: 指向当前函数的调用者传入的所有参数")]),e._v(" "),v("li",[e._v("变量作用域与变量提升")]),e._v(" "),v("li",[e._v("命名空间 : 将所有变量和函数全部绑定到一个全局变量中，可以减少命名冲突")]),e._v(" "),v("li",[e._v("解构赋值：")]),e._v(" "),v("li",[e._v("方法：在一个对象中绑定函数，称为这个对象的方法\n"),v("ul",[v("li",[e._v("this的指向问题：1. 以对象的方法调用，则该函数的this指向被调用的对象，单独调用函数，则该函数的this指向全局对象 ，也就是window。")]),e._v(" "),v("li",[e._v("控制"),v("code",[e._v("this")]),e._v("的指向问题：apply()方法传入两个参数，一个作为函数上下文的对象，另一个作为函数参数所组成数组； call()方法也传入参数，一个作为函数上下文的对象，后面传入的是一个参数列表。bind()方法也接收两部分参数，第一个参数是作为函数上下文的对象，第二部分参数是个列表，可以接收多个参数，但bind的方法不会立即执行，而是返回一个改变了上下文this后的函数，原函数中的this并没有被改变。")])])]),e._v(" "),v("li",[e._v("高阶函数：一个函数接收另一个函数作为参数，这种函数被称之为高阶函数。")])]),e._v(" "),v("div",{staticClass:"language- extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[e._v("// 一个简单的高阶函数\nfunction add(x,y,f) {\n\treturn f(x) + f(y);\n}\n")])])]),v("pre",[v("code",[e._v("  - map的使用：  ")])])])])}],!1,null,null,null);_.options.__file="JavaScript学习知识积累.md";a.default=_.exports}}]);