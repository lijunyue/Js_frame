(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{191:function(t,e,n){"use strict";n.r(e);var a=n(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("数据库（Database）是按照数据结构来组织、存储和管理数据的仓库，每个数据库都有一个或多个不同的API用于创建，访问，管理，搜索和复制所保存的数据。MySQL是一个关系型数据库管理系统。")]),t._v(" "),t._m(1),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://e.jd.com/30190816.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("书籍参考《MySQL数据库入门》"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.mysql.com/cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL中文官网"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://www.runoob.com/mysql/mysql-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL教程 -- 菜鸟教程"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.jianshu.com/p/fd3aae701db9",target:"_blank",rel:"noopener noreferrer"}},[t._v("mac安装mysql的两种方法（含配置）"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.mamp.info/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MAMP -- PHP集成开发工具"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://sequelpro.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sequel Pro -- Mac上的MySQL管理工具"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://segmentfault.com/a/1190000006255923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Sequel Pro使用入门教程"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://www.jianshu.com/p/118e1c41e9f0",target:"_blank",rel:"noopener noreferrer"}},[t._v("mysql基本操作命令汇总--笔记"),n("OutboundLink")],1)])]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._m(23),t._v(" "),t._m(24),t._m(25),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._m(30)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"mysql数据库学习资料汇总"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql数据库学习资料汇总","aria-hidden":"true"}},[this._v("#")]),this._v(" MySQL数据库学习资料汇总")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考资料网址"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料网址","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考资料网址")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"mysql入门教程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql入门教程","aria-hidden":"true"}},[this._v("#")]),this._v(" MySQL入门教程")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ul",[n("li",[n("p",[t._v("安装")]),t._v(" "),n("ol",[n("li",[t._v("使用mysql安装包安装")]),t._v(" "),n("li",[t._v("通过homebrew工具安装")]),t._v(" "),n("li",[t._v("通过安装 PHP集成开发环境工具 -- MAMP")])])]),t._v(" "),n("li",[n("p",[t._v("Sequel Pro 的使用")]),t._v(" "),n("ol",[n("li",[t._v("启动 mysql 服务，端口默认 3306；")]),t._v(" "),n("li",[t._v("通过 root 连接数据库，因为新建数据库和新建用户需要 root 用户权限；")]),t._v(" "),n("li",[t._v("新建数据库：点击 Choose Database-> Add Database创建数据库；")]),t._v(" "),n("li",[t._v("新建用户：点击右上角User，弹出下面用户操作对话框，建立 web 用户，给刚才新建的 laravel 数据库赋予权限；")]),t._v(" "),n("li",[t._v("用新建 web 用户连接 laravel 数据库；")]),t._v(" "),n("li",[t._v("在 Query 可以用 命令 去修改数据库的东西；(Run Current -- 运行当前行命令， Run All Queries -- 运行所有命令)")])])]),t._v(" "),n("li",[n("p",[t._v("mysql基本操作命令汇总")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("0-0. 命令行工具操作(终端)")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 连接数据库\nmysql -u root -p\n// 退出数据库\nquit 或者 control + D 退出\n")])])])]),t._v(" "),n("li",[n("p",[t._v("1-1. 数据库操作(Sequl Pro的 Query)")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 创建数据库\ncreate database h_test;\n// 查看数据库\nshow databases;\n// 查看数据库信息\nshow create database h_test;\n// 修改数据库的编码，可使用上一条语句查看是否修改成功\nalter database h_test default character set gbk collate gbk_bin;\n// 删除数据库\ndrop database h_test;\n// 综上，可以直接创建数据库且设置编码方式\nCREATE DATABASE h_test DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;\n")])])])]),t._v(" "),n("li",[n("p",[t._v("1-2. 数据表操作")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 首先选定操作的数据库\nuse h_test;\n// 创建表student\ncreate table student(\n  id  int(11),\n  name  varchar(20),\n  age int(11)\n);\n// 查看数据表\nshow tables;\n// 查看数据表信息，后面加上参数 \\G 可使结果更加美观\nshow create table student;\n// 查看表的字段信息\ndesc student;\n// 修改表名\nalter table student rename to h_student;\n// 修改字段名\nalter table h_student change name stu_name varchar(20);\n// 修改字段的数据类型\nalter table h_student modify id int(20);\n// 添加字段\nalter table h_student add grade float;\n// 删除字段\nalter table h_student drop grade;\n// 修改字段的位置\nalter table h_student modify stu_name varchar(20) first;\nalter table h_student modify id int(11) after age;\n// 删除数据表\ndrop table h_student;\n")])])])]),t._v(" "),n("li",[n("p",[t._v("1-3. 表的约束")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("条件")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("IMARY KEY")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("主键约束，用于唯一标识对应的记录")])]),t._v(" "),n("tr",[n("td",[t._v("REIGN KEY")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("外键约束")])]),t._v(" "),n("tr",[n("td",[t._v("T NULL")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("非空约束")])]),t._v(" "),n("tr",[n("td",[t._v("IQUE")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("唯一性约束")])]),t._v(" "),n("tr",[n("td",[t._v("FAULT")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("默认值约束，用于设置字段的默认值")])])])])]),t._v(" "),n("li",[n("p",[t._v("1-4. 索引")]),t._v(" "),n("blockquote",[n("p",[t._v("作用：提高表中数据的查询速度 "),n("br"),t._v("\n种类：1.普通索引 2.唯一性索引 3.全文索引 4.单列索引 5.多列索引 6.空间索引")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 创建索引\n// 一、创建表的时候创建索引\ncreate table 表名(\n\t字段名 数据类型[完整性约束条件],\n\t...\n\t字段名 数据类型,\n\t[UNIQUE][FULLTEXT|SPATIAL] INDEX|KEY\n);\n// 1-1. 创建普通索引\ncreate table test1(\n\tid  INT,\n\tname \tVARCHAR(20),\n\tage INT,\n\tINDEX (id)\n);\n// 可以插入一条数据，查看索引是否被使用\nexplain select * from test1 where id=1 \\G;\n// 1-2. 创建唯一性索引\ncreate table test2(\n\tid  INT,\n\tname \tVARCHAR(20),\n\tage INT,\n\tUNIQUE INDEX unique_id(id asc)\n);\n// 1-3. 创建全文索引\ncreate table test3(\n\tid  INT,\n\tname \tVARCHAR(20),\n\tage INT,\n\tFULLTEXT INDEX fulltext_name(name)\n)ENGINE=MyISAM;\n// 1-4. 创建单列索引\ncreate table test4(\n\tid  INT,\n\tname \tVARCHAR(20),\n\tage INT,\n\tINDEX single_name(name(20))\n);\n// 1-5. 创建多列索引\ncreate table test5(\n\tid  INT,\n\tname \tVARCHAR(20),\n\tage INT,\n\tINDEX multi(id,name(20))\n);\n// 1-6. 创建空间索引\ncreate table test6(\n\tid  INT,\n\tspace GEOMETRY NOT NULL,\n\tSPATIAL INDEX sp(space)\n)ENGINE=MyISAM;\n---------------------------------------------\n// 二、使用create index语句在已经存在的表上创建索引\n// 首先新建一个表，这个表没有索引\ncreate table student(\n\tid int,\n\tage int,\n\tname varchar(20),\n\tintro varchar(40),\n\tg GEOMETRY NOT NULL\n)ENGINE=MyISAM;\n// 2-1. 创建普通索引\ncreate index index_id on student(id);\n// 2-2. 创建唯一性索引\ncreate unique index uniqueidx on student(id);\n// 2-3 创建单列索引\ncreate index singleidx on student(age);\n// 2-4. 创建多列索引\ncreate index mulitidx on student(name(20),intro(40));\n// 2-5. 创建全文索引\ncreate fulltext index fulltextidx on student(name);\n// 2-6. 创建空间索引\ncreate spatial index spatidx on student(g);\n// 下图是第二种方法创建索引演示后的所有索引\n命令：show create table student;\nCREATE TABLE `student` (\n  `id` int(11) DEFAULT NULL,\n  `age` int(11) DEFAULT NULL,\n  `name` varchar(20) DEFAULT NULL,\n  `intro` varchar(40) DEFAULT NULL,\n  `g` geometry NOT NULL,\n  UNIQUE KEY `uniqueidx` (`id`),\n  KEY `index_id` (`id`),\n  KEY `singleidx` (`age`),\n  KEY `mulitidx` (`name`,`intro`),\n  SPATIAL KEY `spatidx` (`g`),\n  FULLTEXT KEY `fulltextidx` (`name`)\n) ENGINE=MyISAM DEFAULT CHARSET=utf8\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 三、使用alter table语句在已经存在的表上创建索引 \n// 删除student表，重新创建 \ndrop table student;\ncreate table student(\n\tid int,\n\tage int,\n\tname varchar(20),\n\tintro varchar(40),\n\tspace GEOMETRY NOT NULL\n)ENGINE=MyISAM;\n// 3-1. 创建普通索引\nalter table student add index index_id(id);\n// 3-2. 创建唯一性\nalter table student add unique uniqueidx(id);\n// 3-3. 创建单列索引\nalter table student add index singleidx(age);\n// 3-4. 创建多列索引\nalter table student add index multidx(name(20),intro(40));\n// 3-5. 创建全文索引\nalter table student add fulltext index fulltextidx(name);\n// 3-6. 创建空间索引\nalter table student add spatial index spatidx(space);\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 删除索引，有下面两种方式\n// 1. 使用alter table删除索引fulltextidx\nalter table student drop index fulltextidx;\n// 2. 使用drop index 删除索引spatidx\ndrop index spatidx on student;\n")])])])]),t._v(" "),n("li",[n("p",[t._v("1-5、添加数据")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 重新建立表 student\ndrop table student;\ncreate table student(\n  id int,\n  name varchar(20) not null,\n  grade float\n);\n// 插入一条数据，也可以少某个字段的同时也少对应的数据\ninsert into student(id,name,grade) values(1,'howie',70);\n// 也可以不指定字段名，但要注意顺序\ninsert into student values(2,'howie',80);\n// 也可以这样添加数据\ninsert into student set id=3,name=\"howie\",grade=90;\n// 同时添加多条数据\ninsert into student values (4,'howie',80),(5,'howie',80),(6,'howie',80);\n")])])])]),t._v(" "),n("li",[n("p",[t._v("1-6、更新数据")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('// 更新id=1的数据\nupdate student set name="howie",grade=60 where id=1;\n// 批量更新，如果没有where子句，会更新表中所有对应数据\nupdate student set grade=100 where id<4;\n')])])])]),t._v(" "),n("li",[n("p",[t._v("1-7、删除数据")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 删除id=6的数据\ndelete from student where id=6;\n// 批量删除数据\ndelete from student where id>3;\n// 删除所有数据，DDL(数据定义语言)语句 truncate table student也可以删除表内所有数据\ndelete from student;\n")])])])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"二、单表查询和多表操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、单表查询和多表操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 二、单表查询和多表操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("单表查询：如何从数据库中获取你需要的数据\n多表查询：实际开发中，需要进行2张表以上进行操作")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-1-1-单表查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-单表查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 2-1-1. 单表查询")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v('```\n// 建立表 student\ncreate table student(\n\tid int not null auto_increment,\n\tname varchar(20) not null,\n\tgrade float,\n\tprimary key(id)\n);\n// 插入数据\ninsert into student (name,grade) values ("howie1",40),("howie1",50),("howie2",50),("howie3",60),("howie4",70),("howie5",80),("howie6",null);\n// 查询全部\nselect * from student;\n// 查询某个字段\nselect name from student;\n// 条件查询，查询 id=2 学生的信息\nselect * from student where id=2;\n// in关键字查询，也可以使用not in\nselect * from student where id IN(1,2,3);\n// between and 关键字查询\nselect * from student where id between 2 and 5;\n// 空值(NULL)查询，使用IS NULL 来判断\nselect * from student where grade is null;\n// distinct 关键字查询\nselect distinct name from student;\n// like 关键字查询，查询以h开头，e结尾的数据\nselect * from student where name like "h%e";\n// and关键字多条件查询，or关键字的使用也是类似\nselect * from student where id>5 and grade>60;\n```\n')])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-1-2-高级查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-高级查询","aria-hidden":"true"}},[this._v("#")]),this._v(" 2-1-2. 高级查询")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("```\n// 聚合函数\n// count()函数，sum()函数，avg()函数，max()函数，min()函数\nselect count(*) from student;    // 列表总数\nselect sum(grade) from student;  // 计算总和\nselect avg(grade) from student;  // 计算平均值\nselect max(grade) from student;  // 求最大值\nselect min(grade) from student;  // 求最小值\n// 对查询结果进行排序\nselect * from student order by grade;  // 默认正序\nselect * from student order by grade desc; // 倒序\n// 分组查询\n// 1.单独使用group by 分组\nselect * from student group by grade;\n// 2.和聚合函数一起使用\nselect count(*),grade from student group by grade;\n// 3.和having关键字一起使用\nselect sum(grade),name from student group by grade having sum(grade)>100;\n// 使用limit限制查询结果的数量\nselect * from student limit 5;    // 最多5个\nselect * from student limit 2,2;  // 从第2开始，查询2个\nselect * from student order by grade desc limit 2,2;\n// 函数，mysql提供了许多函数\nselect concat(id,':',name,':',grade) from student;\n// 为表取别名\nselect * from student as stu where stu.name=\"howie1\";\n// 为字段取别名，as关键字也可以不写\nselect name as stu_name,grade stu_grade from student;\n```\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-2-多表操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-多表操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 2-2. 多表操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("ol",[e("li",[this._v("了解外键")]),this._v(" "),e("li",[this._v("了解关联关系")]),this._v(" "),e("li",[this._v("了解各种连接查询多表的数据")]),this._v(" "),e("li",[this._v("了解子查询，会使用各种关键字以及比较运算符查询多表中的数据")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-2-1-外键"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-外键","aria-hidden":"true"}},[this._v("#")]),this._v(" 2-2-1. 外键")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("外键是指引用另外一个表中的一列或者多列，被引用的列应该具有主键约束或者唯一性约束，用于建立和加强两个数据表之间的连接。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 创建表 class, student\ncreate table class(\n   id int not null primary key,\n   classname varchar(20) not null\n)ENGINE=InnoDB;\ncreate table student(\n\tstu_id int not null primary key,\n\tstu_name varchar(20) not null,\n\tcid int not null      // 表示班级id, 它就是class表的外键\n)ENGINE=InnoDB;\n// 添加外键约束\nalter table student add constraint FK_ID foreign key(cid) references class(id);\n// 删除外键约束\nalter table student drop foreign key FK_ID;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-2-2-操作关联表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-操作关联表","aria-hidden":"true"}},[this._v("#")]),this._v(" 2-2-2. 操作关联表")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 数据表有三种关联关系，多对一、多对多、一对一\n// 学生(student)和班级(class)是多对一关系，添加数据\n// 首选添加外键约束\nalter table student add constraint FK_ID foreign key(cid) references class(id);\n// 添加数据，这两个表便有了关联，若插入中文在终端显示空白，可设置 set names \'gbk\';\ninsert into class values(1,"软件一班"),(2,"软件二班");\ninsert into student values(1,"howie",1),(2,"howie1",2),(3,"howie2",1),(4,"howie3",2);\n// 交叉连接\nselect * from student cross join class;\n// 内连接，该功能也可以使用where 语句实现\nselect student.stu_name,class.classname from student join class on class.id=student.cid;\n// 外连接\n// 首先在student,class表中插入数据\ninsert into class values(3,"软件三班");\n// 左连接，右连接\nselect s.stu_id,s.stu_name from student s left join class c on c.id=s.cid;\nselect s.stu_id,s.stu_name,c.classname from student s right join class c on c.id=s.cid;\n// 复合条件连接查询就是添加过滤条件\n// 子查询\n// in关键字子查询跟上面的in关键字查询类似\nselect * from student where cid in(select id from class where id=2);\n// exists关键字查询，相当于测试，不产生数据，只返回true或者false,只有返回true,外层才会执行\nselect * from student where exists(select id from class where id=12);   // 外层不会执行\nselect * from student where exists(select id from class where id=1); // 外层会执行\n// any关键字查询\nselect * from student where cid>any(select id from class);\n// all关键字查询\nselect * from student where cid>all(select id from class);\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"三、事务与存储过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、事务与存储过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 三、事务与存储过程")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("事务的概念，会开启、提交和回滚事务\n事务的四种隔离级别\n创建存储过程\n调用、查看、修改和删除存储过程")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-1-事务管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-事务管理","aria-hidden":"true"}},[this._v("#")]),this._v(" 3-1 事务管理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("start transaction;  -- 开启事务\ncommit;   \t\t\t-- 提交事务\nrollback;  \t\t\t-- 取消事务(回滚)\n// 创建表account, 插入数据\ncreate table account(\n\tid int primary key auto_increment,\n\tname varchar(40),\n\tmoney float\n);\ninsert into account(name,money) values('a',1000),('b',2000),('c',3000);\n// 利用事务实现转账功能，首先开启事务，然后执行语句，提交事务\nstart transaction;\nupdate account set money=money-100 where name='a';\nupdate account set money=money+100 where name='b';\ncommit;\n// 事务的提交，通过这个命令查看mysql提交方式\nselect @@autocommit;  -- 若为1，表示自动提交，为0，就要手动提交\n// 设置事务的提交方式为手动提交\nset @@autocommit = 0;  -- 设置为手动提交\nstart transaction;\nupdate account set money=money+100 where name='a';\nupdate account set money=money-100 where name='b';\n// 现在执行 select * from account 可以看到转账成功，若此时退出数据库重新登录，会看到各账户余额没有改变，所以一定要用commit语句提交事务，否则会失败\n// 事务的回滚，别忘记设置为手动提交的模式\nstart transaction;\nupdate account set money=money-100 where name='a'; \nupdate account set money=money+100 where name='b';  \n// 若此时a不想转账给b,可以使用事务的回滚\nrollback;\n// 事务的隔离级别\nread uncommitted;\nread committed;\nrepeatable read;\nserializable;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-2-存储过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-存储过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 3-2 存储过程")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 创建查看student表的存储过程\n// 创建student表\ncreate table student(\n\tid int not null primary key auto_increment,\n\tname varchar(4),\n\tgrade float\n)ENGINE=InnoDB default character set utf8;\ndelimiter //   -- 将mysql的结束符设置为//\ncreate procedure Proc()\n\tbegin\n\tselect * from student;\n\tend //\ndelimiter ;   -- 将mysql的结束符设置为 ;\ncall Proc();  -- 这样就可以调用该存储过程\n// 变量的使用，mysql中变量不用事前申明，在用的时候直接用“@变量名”使用就可以\nset @number=100;  -- 或set @num:=1;\n// 定义条件和处理程序\n// 光标的使用 (没有运行过去)\n// 1.声明光标\nDECLARE * cursor_name* CURSOR FOR select_statement\n2. 光标OPEN语句\nOPEN cursor_name\n3. 光标FETCH语句\nFETCH cursor_name INTO var_name [, var_name] ...\n4. 光标CLOSE语句\nCLOSE cursor_name\n// 流程控制的使用 暂不做介绍\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-3-调用存储过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-调用存储过程","aria-hidden":"true"}},[this._v("#")]),this._v(" 3-3 调用存储过程")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('// 定义存储过程\ndelimiter //\ncreate procedure proc1(in name varchar(4),out num int)\nbegin\nselect count(*) into num from student where name=name;\nend//\ndelimiter ;\n// 调用存储过程\ncall proc1("tom",@num)  -- 查找名为tom学生人数\n// 查看结果\nselect @num; -- 结果 0\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 查看存储过程\nshow procedure status like 'p%'  -- 获得以p开头的存储过程信息\n// 修改存储过程\nalter {procedure|function} sp_name[characteristic...]\n// 删除存储过程\ndrop procedure proc1;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"四、视图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、视图","aria-hidden":"true"}},[this._v("#")]),this._v(" 四、视图")])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("如何创建视图 "),e("br"),this._v("\n查看、修改、更新、删除视图")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_4-1、视图的基本操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、视图的基本操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 4-1、视图的基本操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 在单表上创建视图，重新创建student表，插入数据\ncreate table student(\n\tid int not null primary key auto_increment,\n\tname varchar(10) not null,\n\tmath float,\n\tchinese float\n);\ninsert into student(name,math,chinese) values('howie1',66,77),('howie2',66,77),('howie3',66,77);\n// 开始创建视图\ncreate view stu_view as select math,chinese,math+chinese from student;   -- select * from stu_view 可以查看是否成功\n// 也可以创建自定义字段名称的视图\ncreate view stu_view2(math,chin,sum) as select math,chinese,math+chinese from student;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("// 在多表上创建视图，创建表 stu_info, 插入数据\ncreate table stu_info(\n\tid int not null primary key auto_increment,\n\tclass varchar(10) not null,\n\taddr varchar(100)\n);\ninsert into stu_info(class,addr) values('1','anhui'),('2','fujian'),('3','guangdong');\n// 创建视图stu_class\ncreate view stu_class(id,name,class) as select student.id,student.name,stu_info.class from student,stu_info where student.id=stu_info.id;\n// 查看视图\ndesc stu_class;\nshow table status like 'stu_class'\nshow create view stu_class\n// 修改视图\ncreate or replace view stu_view as select * from student;\nalter view stu_view as select chinese from student;\n// 更新视图\nupdate stu_view set chinese=100;\ninsert into student values(null,'haha',100,100);\ndelete from stu_view2 where math=100;\n// 删除视图\ndrop view if exists stu_view2;\n")])])])}],!1,null,null,null);s.options.__file="mysql数据库学习资料汇总.md";e.default=s.exports}}]);